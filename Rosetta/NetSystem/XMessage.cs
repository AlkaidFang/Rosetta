// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: XMessage.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace XMessage {

  /// <summary>Holder for reflection information generated from XMessage.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class XMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for XMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5YTWVzc2FnZS5wcm90bxIIWE1lc3NhZ2Ui1QEKBlBlcnNvbhIMCgRuYW1l",
            "GAEgASgJEgoKAmlkGAIgASgFEg0KBWVtYWlsGAMgASgJEiwKBnBob25lcxgE",
            "IAMoCzIcLlhNZXNzYWdlLlBlcnNvbi5QaG9uZU51bWJlchpHCgtQaG9uZU51",
            "bWJlchIOCgZudW1iZXIYASABKAkSKAoEdHlwZRgCIAEoDjIaLlhNZXNzYWdl",
            "LlBlcnNvbi5QaG9uZVR5cGUiKwoJUGhvbmVUeXBlEgoKBk1PQklMRRAAEggK",
            "BEhPTUUQARIICgRXT1JLEAIiLwoLQWRkcmVzc0Jvb2sSIAoGcGVvcGxlGAEg",
            "AygLMhAuWE1lc3NhZ2UuUGVyc29uIk0KDUNTX0hlbGxvV29ybGQSDAoEX2lu",
            "dBgBIAEoBRIOCgZfZmxvYXQYAiABKAISDQoFX2xvbmcYAyABKAMSDwoHX3N0",
            "cmluZxgEIAEoCSIqChNTQ19IZWxsb1dvcmxkUmVzdWx0EhMKC19yZXN1bHRD",
            "b2RlGAEgASgFQiYKGmNvbS5hbGthaWQucGVhcmxoYXJib3IubmV0QghYTWVz",
            "c2FnZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedCodeInfo(null, new pbr::GeneratedCodeInfo[] {
            new pbr::GeneratedCodeInfo(typeof(global::XMessage.Person), global::XMessage.Person.Parser, new[]{ "Name", "Id", "Email", "Phones" }, null, new[]{ typeof(global::XMessage.Person.Types.PhoneType) }, new pbr::GeneratedCodeInfo[] { new pbr::GeneratedCodeInfo(typeof(global::XMessage.Person.Types.PhoneNumber), global::XMessage.Person.Types.PhoneNumber.Parser, new[]{ "Number", "Type" }, null, null, null)}),
            new pbr::GeneratedCodeInfo(typeof(global::XMessage.AddressBook), global::XMessage.AddressBook.Parser, new[]{ "People" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::XMessage.CS_HelloWorld), global::XMessage.CS_HelloWorld.Parser, new[]{ "Int", "Float", "Long", "String" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::XMessage.SC_HelloWorldResult), global::XMessage.SC_HelloWorldResult.Parser, new[]{ "ResultCode" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Person : pb::IMessage<Person> {
    private static readonly pb::MessageParser<Person> _parser = new pb::MessageParser<Person>(() => new Person());
    public static pb::MessageParser<Person> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::XMessage.XMessageReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Person() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Person(Person other) : this() {
      name_ = other.name_;
      id_ = other.id_;
      email_ = other.email_;
      phones_ = other.phones_.Clone();
    }

    public Person Clone() {
      return new Person(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    /// <summary>
    ///  Unique ID number for this person.
    /// </summary>
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 3;
    private string email_ = "";
    public string Email {
      get { return email_; }
      set {
        email_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phones" field.</summary>
    public const int PhonesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::XMessage.Person.Types.PhoneNumber> _repeated_phones_codec
        = pb::FieldCodec.ForMessage(34, global::XMessage.Person.Types.PhoneNumber.Parser);
    private readonly pbc::RepeatedField<global::XMessage.Person.Types.PhoneNumber> phones_ = new pbc::RepeatedField<global::XMessage.Person.Types.PhoneNumber>();
    public pbc::RepeatedField<global::XMessage.Person.Types.PhoneNumber> Phones {
      get { return phones_; }
    }

    public override bool Equals(object other) {
      return Equals(other as Person);
    }

    public bool Equals(Person other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      if (Email != other.Email) return false;
      if(!phones_.Equals(other.phones_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      hash ^= phones_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Email);
      }
      phones_.WriteTo(output, _repeated_phones_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      size += phones_.CalculateSize(_repeated_phones_codec);
      return size;
    }

    public void MergeFrom(Person other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      phones_.Add(other.phones_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            Email = input.ReadString();
            break;
          }
          case 34: {
            phones_.AddEntriesFrom(input, _repeated_phones_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Person message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum PhoneType {
        MOBILE = 0,
        HOME = 1,
        WORK = 2,
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class PhoneNumber : pb::IMessage<PhoneNumber> {
        private static readonly pb::MessageParser<PhoneNumber> _parser = new pb::MessageParser<PhoneNumber>(() => new PhoneNumber());
        public static pb::MessageParser<PhoneNumber> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::XMessage.Person.Descriptor.NestedTypes[0]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public PhoneNumber() {
          OnConstruction();
        }

        partial void OnConstruction();

        public PhoneNumber(PhoneNumber other) : this() {
          number_ = other.number_;
          type_ = other.type_;
        }

        public PhoneNumber Clone() {
          return new PhoneNumber(this);
        }

        /// <summary>Field number for the "number" field.</summary>
        public const int NumberFieldNumber = 1;
        private string number_ = "";
        public string Number {
          get { return number_; }
          set {
            number_ = pb::Preconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 2;
        private global::XMessage.Person.Types.PhoneType type_ = global::XMessage.Person.Types.PhoneType.MOBILE;
        public global::XMessage.Person.Types.PhoneType Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        public override bool Equals(object other) {
          return Equals(other as PhoneNumber);
        }

        public bool Equals(PhoneNumber other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Number != other.Number) return false;
          if (Type != other.Type) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (Number.Length != 0) hash ^= Number.GetHashCode();
          if (Type != global::XMessage.Person.Types.PhoneType.MOBILE) hash ^= Type.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Number.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Number);
          }
          if (Type != global::XMessage.Person.Types.PhoneType.MOBILE) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Type);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Number.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Number);
          }
          if (Type != global::XMessage.Person.Types.PhoneType.MOBILE) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          return size;
        }

        public void MergeFrom(PhoneNumber other) {
          if (other == null) {
            return;
          }
          if (other.Number.Length != 0) {
            Number = other.Number;
          }
          if (other.Type != global::XMessage.Person.Types.PhoneType.MOBILE) {
            Type = other.Type;
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Number = input.ReadString();
                break;
              }
              case 16: {
                type_ = (global::XMessage.Person.Types.PhoneType) input.ReadEnum();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  ///  Our address book file is just one of these.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AddressBook : pb::IMessage<AddressBook> {
    private static readonly pb::MessageParser<AddressBook> _parser = new pb::MessageParser<AddressBook>(() => new AddressBook());
    public static pb::MessageParser<AddressBook> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::XMessage.XMessageReflection.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public AddressBook() {
      OnConstruction();
    }

    partial void OnConstruction();

    public AddressBook(AddressBook other) : this() {
      people_ = other.people_.Clone();
    }

    public AddressBook Clone() {
      return new AddressBook(this);
    }

    /// <summary>Field number for the "people" field.</summary>
    public const int PeopleFieldNumber = 1;
    private static readonly pb::FieldCodec<global::XMessage.Person> _repeated_people_codec
        = pb::FieldCodec.ForMessage(10, global::XMessage.Person.Parser);
    private readonly pbc::RepeatedField<global::XMessage.Person> people_ = new pbc::RepeatedField<global::XMessage.Person>();
    public pbc::RepeatedField<global::XMessage.Person> People {
      get { return people_; }
    }

    public override bool Equals(object other) {
      return Equals(other as AddressBook);
    }

    public bool Equals(AddressBook other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!people_.Equals(other.people_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= people_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      people_.WriteTo(output, _repeated_people_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += people_.CalculateSize(_repeated_people_codec);
      return size;
    }

    public void MergeFrom(AddressBook other) {
      if (other == null) {
        return;
      }
      people_.Add(other.people_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            people_.AddEntriesFrom(input, _repeated_people_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CS_HelloWorld : pb::IMessage<CS_HelloWorld> {
    private static readonly pb::MessageParser<CS_HelloWorld> _parser = new pb::MessageParser<CS_HelloWorld>(() => new CS_HelloWorld());
    public static pb::MessageParser<CS_HelloWorld> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::XMessage.XMessageReflection.Descriptor.MessageTypes[2]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public CS_HelloWorld() {
      OnConstruction();
    }

    partial void OnConstruction();

    public CS_HelloWorld(CS_HelloWorld other) : this() {
      Int_ = other.Int_;
      Float_ = other.Float_;
      Long_ = other.Long_;
      String_ = other.String_;
    }

    public CS_HelloWorld Clone() {
      return new CS_HelloWorld(this);
    }

    /// <summary>Field number for the "_int" field.</summary>
    public const int IntFieldNumber = 1;
    private int Int_;
    public int Int {
      get { return Int_; }
      set {
        Int_ = value;
      }
    }

    /// <summary>Field number for the "_float" field.</summary>
    public const int FloatFieldNumber = 2;
    private float Float_;
    public float Float {
      get { return Float_; }
      set {
        Float_ = value;
      }
    }

    /// <summary>Field number for the "_long" field.</summary>
    public const int LongFieldNumber = 3;
    private long Long_;
    public long Long {
      get { return Long_; }
      set {
        Long_ = value;
      }
    }

    /// <summary>Field number for the "_string" field.</summary>
    public const int StringFieldNumber = 4;
    private string String_ = "";
    public string String {
      get { return String_; }
      set {
        String_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as CS_HelloWorld);
    }

    public bool Equals(CS_HelloWorld other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Int != other.Int) return false;
      if (Float != other.Float) return false;
      if (Long != other.Long) return false;
      if (String != other.String) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Int != 0) hash ^= Int.GetHashCode();
      if (Float != 0F) hash ^= Float.GetHashCode();
      if (Long != 0L) hash ^= Long.GetHashCode();
      if (String.Length != 0) hash ^= String.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Int != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Int);
      }
      if (Float != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Float);
      }
      if (Long != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Long);
      }
      if (String.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(String);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Int != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Int);
      }
      if (Float != 0F) {
        size += 1 + 4;
      }
      if (Long != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Long);
      }
      if (String.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(String);
      }
      return size;
    }

    public void MergeFrom(CS_HelloWorld other) {
      if (other == null) {
        return;
      }
      if (other.Int != 0) {
        Int = other.Int;
      }
      if (other.Float != 0F) {
        Float = other.Float;
      }
      if (other.Long != 0L) {
        Long = other.Long;
      }
      if (other.String.Length != 0) {
        String = other.String;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Int = input.ReadInt32();
            break;
          }
          case 21: {
            Float = input.ReadFloat();
            break;
          }
          case 24: {
            Long = input.ReadInt64();
            break;
          }
          case 34: {
            String = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SC_HelloWorldResult : pb::IMessage<SC_HelloWorldResult> {
    private static readonly pb::MessageParser<SC_HelloWorldResult> _parser = new pb::MessageParser<SC_HelloWorldResult>(() => new SC_HelloWorldResult());
    public static pb::MessageParser<SC_HelloWorldResult> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::XMessage.XMessageReflection.Descriptor.MessageTypes[3]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SC_HelloWorldResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SC_HelloWorldResult(SC_HelloWorldResult other) : this() {
      ResultCode_ = other.ResultCode_;
    }

    public SC_HelloWorldResult Clone() {
      return new SC_HelloWorldResult(this);
    }

    /// <summary>Field number for the "_resultCode" field.</summary>
    public const int ResultCodeFieldNumber = 1;
    private int ResultCode_;
    public int ResultCode {
      get { return ResultCode_; }
      set {
        ResultCode_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SC_HelloWorldResult);
    }

    public bool Equals(SC_HelloWorldResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResultCode != other.ResultCode) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (ResultCode != 0) hash ^= ResultCode.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (ResultCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ResultCode);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (ResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResultCode);
      }
      return size;
    }

    public void MergeFrom(SC_HelloWorldResult other) {
      if (other == null) {
        return;
      }
      if (other.ResultCode != 0) {
        ResultCode = other.ResultCode;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ResultCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
